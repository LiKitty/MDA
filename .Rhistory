library(bigleaf)
data(AT_Neu_Jul_2010)
?AT_Neu_Jul_2010
tair <- ts(head(AT_Neu_Jul_2010[,5],48*7),frequency = 48,start=182)
plot(tair,type="l")
tair2 <- ts((as.integer(tair)-as.integer(trend_stl_air)),
start=c(182,1),frequency=48)
a3<-ar(tair2,method = "ols")
a3
tsp<-predict(a3,n.ahead=500)
plot(tair2)
plot(tair2,xlim=c(182,200),ylim=c(-10,10))
lines(tsp$pred,col='red')
lines(tsp$pred+2*tsp$se,col='blue')
lines(tsp$pred-2*tsp$se,col='blue')
ts_air = ts(tair, frequency = 48)
decompose_air = decompose(ts_air, "additive")
ts_air = ts(tair, frequency = 48)
stl_air = stl(ts_air, "periodic")
seasonal_stl_air   <- stl_air$time.series[,1]
trend_stl_air     <- stl_air$time.series[,2]
random_stl_air  <- stl_air$time.series[,3]
detrend(tair)
?detrend
library(pracma)
?detrend
tair2 <-detrend(tair)
seasonal_stl_air   <- stl_air$time.series[,1]
trend_stl_air     <- stl_air$time.series[,2]
random_stl_air  <- stl_air$time.series[,3]
plot(ts_air)
tair2 <- ts((as.integer(tair)-as.integer(trend_stl_air)),
start=c(182,1),frequency=48)
a3<-ar(tair2,method = "ols")
a3
tsp<-predict(a3,n.ahead=500)
plot(tair2)
plot(tair2,xlim=c(182,200),ylim=c(-10,10))
lines(tsp$pred,col='red')
lines(tsp$pred+2*tsp$se,col='blue')
lines(tsp$pred-2*tsp$se,col='blue')
fit <- auto.arima(WWWusage)
library(forecast)
fit <- auto.arima(WWWusage)
fit
? stl
stl(ts_air, "periodic",allow.multiplicative.trend=TRUE)
tair
ndiffs(tair)
taird <- diff(tair,1)
ndiffs(taird)
acf(taird)
acf(taird)
pacf(taird)
acf(taird)  #tail off
pacf(taird) #
model1<-arima(tair,order=c(3,1,0),method="ML")
model1
model1$ttable
?arima
model1<-arima(tair,order=c(3,1,0))
summary(model1)
t<- summary(model1)
t
model1
model1
acf(taird)  #tail off
model1$residuals
pacf(model1$residuals)
acf(model1$residuals)
model2<-arima(tair,order=c(3,1,1))
model2
acf(model1$residuals)
acf(taird)  #tail off
pacf(taird) # 3 order
model1<-arima(tair,order=c(1,1,0))
model1
model1<-arima(tair,order=c(3,1,0))
model1
acf(taird)  #tail off
pacf(taird) # 3 order
acf(model1$residuals)
pacf(taird) # 3 order
acf(taird)  #tail off
?auto.arima()
auto.arima(tair,d=1)
library(bigleaf)
data ( AT_Neu_Jul_2010)
atn <-na.omit(AT_Neu_Jul_2010[,5:15])
dim (atn )
set.seed ( 1 )
train1 <- sample ( 1327 , 1327 / 2 )
lmfit1 <- lm ( Tair ~. , data = atn , subset = train1 )
attach ( atn )
pred1 <- predict ( lmfit1 , atn [ - train1 , ] )
mean ( ( Tair [ - train1 ] - pred1 ) ^ 2 )
err1 <- rep ( 0 , 10 )
for ( i in 1 : 10 ) {
train2 <- sample (  1327 ,  1327 / 2 )
lmfit2 <- lm ( Tair ~. , data = atn , subset = train2 )
pred2 <- predict ( lmfit2 , atn [ - train2 , ] )
err1 [ i ] <- mean ( ( Tair [ - train2 ] - pred2 ) ^ 2 , na.rm=T)
}
plot ( 1 : 10 , err1 , xlab = "" , ylim = c ( 5.5 , 6.5 ) , type = "l" ,main = "10 different holdout" )
detach ( atn )
library ( boot )
glmfit1 <- glm ( Tair ~. , data = atn )
cv.err1 <- cv.glm ( atn , glmfit1 )
cv.err1 $ delta
?cv.glm
data(Ozone)
#look at the data description
?Ozone
#look at the data content
View(Ozone)
#assign names to each varibale
names(Ozone) <- c("Month", "Day_of_month", "Day_of_week", "ozone_reading", "pressure_height", "Wind_speed", "Humidity", "Temperature_Sandburg", "Temperature_ElMonte", "Inversion_base_height", "Pressure_gradient", "Inversion_temperature", "Visibility")
#inversion base height is 逆温层高度
#covert factors to integer for time varibles
Ozone[,1] <- as.integer(Ozone[,1])
Ozone[,2] <- as.integer(Ozone[,2])
Ozone[,3] <- as.integer(Ozone[,3])
library(mlbench)
data(Ozone)
#look at the data description
?Ozone
#look at the data content
View(Ozone)
#assign names to each varibale
names(Ozone) <- c("Month", "Day_of_month", "Day_of_week", "ozone_reading", "pressure_height", "Wind_speed", "Humidity", "Temperature_Sandburg", "Temperature_ElMonte", "Inversion_base_height", "Pressure_gradient", "Inversion_temperature", "Visibility")
#inversion base height is 逆温层高度
#covert factors to integer for time varibles
Ozone[,1] <- as.integer(Ozone[,1])
Ozone[,2] <- as.integer(Ozone[,2])
Ozone[,3] <- as.integer(Ozone[,3])
r<-cor(Ozone,use="complete.obs")
r
View(r)
ar <- acf(Ozone$ozone_reading,na.action = na.pass)
ar
lm1 <- lm(ozone_reading~., data=Ozone)
summary(lm1)
lm4 <- step(lm1,direction="both")
summary(lm4)
summary(lm4)
lm5 <- lm(ozone_reading~Month+pressure_height+Humidity+Temperature_Sandburg+Temperature_ElMonte, data=Ozone)
summary(lm5)
lm6 <- lm(ozone_reading~Month+Humidity+Temperature_ElMonte+Temperature_Sandburg, data=Ozone)
summary(lm6)
plot(lm6)
lm1 <- lm(ozone_reading~., data=Ozone)
#load ozone data
data(Ozone)
#look at the data description
?Ozone
#look at the data content
View(Ozone)
#assign names to each varibale
names(Ozone) <- c("Month", "Day_of_month", "Day_of_week", "ozone_reading", "pressure_height", "Wind_speed", "Humidity", "Temperature_Sandburg", "Temperature_ElMonte", "Inversion_base_height", "Pressure_gradient", "Inversion_temperature", "Visibility")
#inversion base height is 逆温层高度
library(bigleaf)
library(bigleaf)
data ( AT_Neu_Jul_2010)
atn <-na.omit(AT_Neu_Jul_2010[,5:15])
dim (atn )
set.seed ( 1 )
train1 <- sample ( 1327 , 1327 / 2 )
train1
1327/2
View(atn)
plot (Ozone[,c("ozone_reading","Month", "Humidity", "Temperature_ElMonte", "Temperature_Sandburg")])
library(mlbench)
data(Ozone)
View(Ozone)
names(Ozone) <- c("Month", "Day_of_month", "Day_of_week", "ozone_reading", "pressure_height", "Wind_speed", "Humidity", "Temperature_Sandburg", "Temperature_ElMonte", "Inversion_base_height", "Pressure_gradient", "Inversion_temperature", "Visibility")
Ozone[,1] <- as.integer(Ozone[,1])
Ozone[,2] <- as.integer(Ozone[,2])
Ozone[,3] <- as.integer(Ozone[,3])
r<-cor(Ozone,use="complete.obs")
r
View(r)
r
ar <- acf(Ozone$ozone_reading,na.action = na.pass)
ar
lm1 <- lm(ozone_reading~., data=Ozone)
summary(lm1)
lm2 <- step(lm1,direction="backward")
summary(lm2)
lm4 <- step(lm1,direction="both")
summary(lm4)
lm3 <- step(lm(ozone_reading~1,data=Ozone),scope=ozone_reading~pressure_height+Wind_speed+Humidity+Temperature_Sandburg+Temperature_ElMonte+Inversion_base_height+Pressure_gradient+Inversion_temperature+Visibility, direction="forward")
summary(lm4)
lm5 <- lm(ozone_reading~Month+pressure_height+Humidity+Temperature_Sandburg+Temperature_ElMonte, data=Ozone)
summary(lm5)
lm6 <- lm(ozone_reading~Month+Humidity+Temperature_ElMonte+Temperature_Sandburg, data=Ozone)
summary(lm6)
plot(lm6)
plot (Ozone[,c("ozone_reading","Month", "Humidity", "Temperature_ElMonte", "Temperature_Sandburg")])
r<-cor(Ozone,use="complete.obs")
r
ar <- acf(Ozone$ozone_reading,na.action = na.pass)
View(r)
summary(lm1)
